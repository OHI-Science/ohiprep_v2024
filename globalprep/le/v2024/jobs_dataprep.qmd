---
title: "wage_service_dataprep"
format: html
editor: visual
---


# Read in Data from Mazu

```{r}
# load packages
library(tidyverse)
library(readxl)
library(here)
library(janitor)


source(here("workflow/R/common.R"))
```

Bring in the UN data of Tourism Job Employment

```{r}
un_job_data <- file.path(dir_M, "git-annex/globalprep/_raw_data/UNWTO/d2024/unwto-all-data-download_0.xlsx")

# take in .xlsx and read it in, clean it
un_jobs_data_raw <- read_xlsx(un_job_data, skip = 2, sheet = "Employment", col_names = TRUE, na = c("","..")) %>%
  janitor::clean_names() %>%
  select(-c(1:3)) %>%
  fill(1, .direction = "down") %>%
  select(-c(x5, x7:units, notes, x38)) %>%
  filter(x6 %in% "Total") %>%
  select(-x6)

# pivot longer so that we can see how many jobs per year, per country!
un_jobs_data_piv <- un_jobs_data_raw %>%
  pivot_longer(cols = 2:28, names_to = "year", values_to = "jobs") %>%
  mutate(year = str_remove_all(year, 'x')) %>%
  rename(country = basic_data_and_indicators)

# remember - jobs are in thousands!
```

Add in country codes to join with OHI Region ID in eez_iso3
```{r}
# install.packages("countrycode")
library(countrycode)

country_regex_to_iso3c <- function(country_string) {
  country_string %>%
    countrycode::countrycode(origin = "country.name", destination = "iso3c", origin_regex = TRUE)
}

# adding iso3 codes
un_jobs_cc <- un_jobs_data_piv %>% 
  mutate(iso3c = country_regex_to_iso3c(country))

# join with OHI region IDs
region_names <- read_csv("https://raw.githubusercontent.com/OHI-Science/ohi-global/draft/eez/spatial/regions_list.csv") %>% 
  janitor::clean_names() %>%
  select(-notes)


jobs_rgn_join <- left_join(region_names, un_jobs_cc, by = c("eez_iso3" = "iso3c")) %>%
  drop_na(jobs)


# plot it
jobs_plot <- jobs_rgn_join %>% 
  ggplot() +
  geom_line(aes(x = as.numeric(year), y = jobs,
                color = admin_country_name)) +
  theme_bw() +
  labs(title = "Number of people employed by the tourism sector")

line_plot <- plot_ly(jobs_rgn_join, x = ~as.numeric(year), y = ~jobs, color = ~admin_country_name, type = "scatter", mode = "lines") %>%
  layout(title = "All Regions: Job Line Chart",
         xaxis = list(title = "Year"),
         yaxis = list(title = "Number of people employed by the tourism sector"))

line_plot
```

```{r}
# join the wages ppp with employee dataframe by region ID and year
# gap starts after 2016 in wage data


# # clean and prep service data
# raw_data_path <- file.path(here(dir_M, #"/home/shares/ohi"
#                                 "git-annex", 
#                                 "globalprep",
#                                 "_raw_data"))
# 
# un_wto_path <- file.path(here(raw_data_path, "UNWTO", "d2024"))
# 
# service_data <- file.path(un_wto_path, "join_database_w_definitions.xlsx")
# 
# service_data_raw <- read_xlsx(service_data, skip = 3, col_names = TRUE)
# 
# service_data_clean <- service_data_raw %>% 
#   select("Country Name", "Country Code", "Region Code", "Year of survey", "Subsample",
#          "Total population", "Median Earnings for wage workers per month in service, local nominal currency") %>% 
#   janitor::clean_names() %>% 
#   mutate(year_of_survey = as.integer(year_of_survey),
#          country_name = as.factor(country_name)) %>% 
#   filter(subsample %in% c("All")) %>% # filtering to All because data also contains "Urban", "Young", etc.
#   select(-subsample) %>% 
#   rename(eez_iso3 = country_code,
#          admin_country_name = country_name)%>%
#   inner_join(x = service_clean, region_names, by = c("eez_iso3", "admin_country_name"))



```


